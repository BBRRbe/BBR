
import streamlit as st
from datetime import datetime
import json
import pandas as pd

# ------------------------
# PASSWORD WALL
# ------------------------
PASSWORD = "ieatfarts"
if "authenticated" not in st.session_state:
    st.session_state.authenticated = False

if not st.session_state.authenticated:
    st.title("Big Raf Bets‚Ñ¢")
    password_input = st.text_input("Enter Password to Access:", type="password")
    if password_input == PASSWORD:
        st.session_state.authenticated = True
        st.experimental_rerun()
    else:
        st.stop()

# ------------------------
# STYLING
# ------------------------
st.markdown("""
    <style>
        body, .stApp { background-color: #fff0f5; color: #000000; }
        .main { background-color: #ffffff; }
        h1, h2, h3 { color: #ff2c8a; }
    </style>
""", unsafe_allow_html=True)

st.title("Big Raf Bets‚Ñ¢")
st.subheader("Powered by RAFI‚Ñ¢: Risk Analysis + Forecast Intelligence")

# ------------------------
# Load Picks
# ------------------------
with open("picks.json") as f:
    picks = json.load(f)

# Confidence score to emoji label
def emoji_score(score):
    if score >= 90:
        return "üî•üö® Elite Lock"
    elif score >= 75:
        return "‚úÖ Very Reliable"
    elif score >= 60:
        return "üëç Stable Signal"
    elif score >= 45:
        return "‚ö†Ô∏è Borderline"
    else:
        return "‚ùå No Play"

for pick in picks:
    pick["Confidence Label"] = emoji_score(pick["Confidence"])

# ------------------------
# Display Picks
# ------------------------
today = datetime.now().strftime("%B %d, %Y")
st.markdown(f"### Model Picks for {today}")

df = pd.DataFrame(picks)
df = df.sort_values(by="Confidence", ascending=False)
st.dataframe(df[["League", "Game", "Pick", "Odds", "Confidence", "Confidence Label"]], use_container_width=True)

# ------------------------
# Footer
# ------------------------
st.markdown("---")
st.caption("All picks generated by the Big Raf Bets‚Ñ¢ model. No guesswork. No fluff. Just calculated plays.")
